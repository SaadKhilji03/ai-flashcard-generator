generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  name           String?
  email          String   @unique
  password       String?
  image          String?
  emailVerified  DateTime?
  accounts       Account[]
  sessions       Session[]
  studySessions  StudySession[]
}

model StudySession {
  id        String   @id @default(cuid())
  title     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  prompts   FlashcardPrompt[]
  createdAt DateTime @default(now())
}

model FlashcardPrompt {
  id         String      @id @default(cuid())
  prompt     String
  numCards   Int
  session    StudySession @relation(fields: [sessionId], references: [id])
  sessionId  String
  flashcards Flashcard[]
  createdAt  DateTime @default(now())
}

model Flashcard {
  id         String   @id @default(cuid())
  question   String
  answer     String
  mcqOptions String[] @default([])
  prompt     FlashcardPrompt @relation(fields: [promptId], references: [id])
  promptId   String
  createdAt  DateTime @default(now())

  @@unique([question, answer, promptId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

